{"version":3,"file":"static/js/1503.1375814d.chunk.js","mappings":"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","sources":["api/contract.ts","page/finance/bill.tsx","utils/exportToExcel.ts"],"sourcesContent":["import { post } from \"../utils/http/request\";\r\n\r\ninterface SearchData{\r\n    contractNo:string;\r\n    person:string;\r\n    tel:string;\r\n    page:number;\r\n    pageSize:number\r\n}\r\ninterface SearchData2{\r\n    page:number;\r\n    pageSize:number;\r\n    no:string;\r\n    status:string;\r\n    startDate:string;\r\n    endDate:string;\r\n}\r\n\r\nexport function getContractList(data:SearchData){\r\n    return post(\"/contractList\",data)\r\n}\r\n\r\n\r\nexport function getBillList(data:SearchData2){\r\n    return post(\"/billList\",data)\r\n}","import {Card,Row,Col,Input,Table,Pagination,Statistic,DatePicker,Select,Button, Tag} from \"antd\"\r\nimport {DownloadOutlined,DeleteOutlined} from '@ant-design/icons';\r\nimport { TableProps } from \"antd\";\r\nimport { getBillList } from \"../../api/contract\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { exportToExcel } from \"../../utils/exportToExcel\";\r\nconst {RangePicker}=DatePicker\r\n\r\ninterface DataType{\r\n    key?:string;\r\n    accountNo:string;\r\n    status?:string;\r\n    roomNo?:string;\r\n    carNo?:string;\r\n    tel?:string;\r\n    costName1?:string;\r\n    costName2?:string;\r\n    costName3?:string;\r\n    startDate?:string;\r\n    endDate?:string;\r\n    preferential?:number;\r\n    money?:number;\r\n    pay?:string;\r\n\r\n}\r\ninterface SearchType{\r\n    date:string[];\r\n    no:string;\r\n    status:string;\r\n    page:number;\r\n    pageSize:number\r\n}\r\n\r\nfunction Bill(){\r\n    const columns:TableProps<DataType>[\"columns\"]=[\r\n        {\r\n            title:\"No.\",\r\n            key:\"index\",\r\n            render(value,record,index){\r\n                return index+1\r\n            },\r\n            width:100,\r\n            fixed:\"left\"\r\n        },\r\n        {\r\n            title:\"Bill Number\",\r\n            dataIndex:\"accountNo\",\r\n            key:\"accountNo\",\r\n            width:150,\r\n        },\r\n        {\r\n            title:\"Payment Status\",\r\n            dataIndex:\"status\",\r\n            key:\"status\",\r\n            width:100,\r\n            render(value){\r\n                return value==1?<Tag color=\"green\">Paid</Tag>:<Tag color=\"red\">Unpaid</Tag>\r\n            }\r\n        },\r\n        {\r\n            title:\"Room Number\",\r\n            dataIndex:\"roomNo\",\r\n            key:\"roomNo\",\r\n            width:100,\r\n        },\r\n        {\r\n            title:\"Parking Number\",\r\n            dataIndex:\"carNo\",\r\n            key:\"carNo\",\r\n            width:100,\r\n        },\r\n        {\r\n            title:\"Phone Number\",\r\n            dataIndex:\"tel\",\r\n            key:\"tel\",\r\n            width:150,\r\n        },\r\n        {\r\n            title:\"Property Fee (Annual)\",\r\n            dataIndex:\"costName1\",\r\n            key:\"costName1\",\r\n            width:150,\r\n        },\r\n\r\n        {\r\n            title:\"Parking Fee\",\r\n            dataIndex:\"costName2\",\r\n            key:\"costName2\",\r\n            width:150,\r\n        },\r\n        {\r\n            title:\"House Rent\",\r\n            dataIndex:\"costName3\",\r\n            key:\"costName3\",\r\n            width:150,\r\n        },\r\n\r\n        {\r\n            title:\"Start Date\",\r\n            dataIndex:\"startDate\",\r\n            key:\"startDate\",\r\n            width:150,\r\n        },\r\n        {\r\n            title:\"End Date\",\r\n            dataIndex:\"endDate\",\r\n            key:\"endDate\",\r\n            width:150,\r\n        },\r\n        {\r\n            title:\"Discount Amount\",\r\n            dataIndex:\"preferential\",\r\n            key:\"preferential\",\r\n            width:150,\r\n        },\r\n        {\r\n            title:\"Total Receivable\",\r\n            dataIndex:\"money\",\r\n            key:\"money\",\r\n            width:150,\r\n        },\r\n        {\r\n            title:\"Payment Method\",\r\n            dataIndex:\"pay\",\r\n            key:\"pay\",\r\n            width:100,\r\n        },\r\n        {\r\n            title:\"Action\",\r\n            width:230,\r\n            key:\"operate\",\r\n            fixed:\"right\",\r\n            render(value){\r\n                return <>\r\n                    <Button type=\"primary\" size=\"small\">Print</Button>\r\n                    <Button type=\"primary\" size=\"small\" danger className=\"ml mr\">Void Bill</Button>\r\n                    <Button type=\"primary\" size=\"small\">Refund</Button>\r\n                </>\r\n            }\r\n        }\r\n    ]\r\n\r\n    const [formData,setFormData]=useState<SearchType>({\r\n        date:[],\r\n        no:\"\",\r\n        status:\"\",\r\n        page:1,\r\n        pageSize:10\r\n    })\r\n    const [dataList,setDataList]=useState<DataType[]>([]);\r\n    const [page,setPage]=useState<number>(1)\r\n    const [pageSize,setPageSize]=useState<number>(10);\r\n    const [loading,setLoading]=useState<boolean>(false);\r\n    const [total,setTotal]=useState<number>(0)\r\n    const [selectedRowKeys,setSelectedRowKeys]=useState<React.Key[]>([])\r\n    const [selectedRows,setSelectedRows]=useState<any>({accountNo:\"\"})\r\n    const handleChange=(value:any,dateString:any)=>{\r\n        console.log(value,dateString)\r\n        setFormData(prevState=>({\r\n            ...prevState,\r\n            date:dateString\r\n        }))\r\n    }\r\n    const handleChange1=(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n        const {value}=e.target;\r\n        setFormData(prevState=>({\r\n            ...prevState,\r\n            no:value\r\n        }))\r\n    }\r\n    const handleChange2=(value:string)=>{\r\n        setFormData(prevState=>({\r\n            ...prevState,\r\n            status:value\r\n        }))\r\n    }\r\n\r\n    const onSelectChange=(selectedRowKeys:React.Key[],selectedRows:any)=>{\r\n        console.log(selectedRows)\r\n        setSelectedRowKeys(selectedRowKeys)\r\n        setSelectedRows(selectedRows)\r\n    }\r\n\r\n    const rowSelection={\r\n        selectedRowKeys,\r\n        onChange:onSelectChange,\r\n        preserveSelectedRowKeys:true\r\n    }\r\n\r\n  const disabled=useMemo(()=>{\r\n        return selectedRowKeys.length?false:true\r\n    },[selectedRowKeys])\r\n\r\n\r\n    const loadData=async ()=>{\r\n        setLoading(true)\r\n        const {data:{list,total}}=await getBillList({page,pageSize,startDate:formData.date[0],endDate:formData.date[1],no:formData.no,status:formData.status})\r\n        setLoading(false);\r\n        setDataList(list);\r\n        setTotal(total)\r\n    }\r\n    const header=[\"accountNo\",\"status\" ,'roomNo', 'carNo', 'tel', 'costName1', 'costName2', 'costName3', 'startDate', 'endDate', 'preferential', 'money', 'pay']\r\n    useEffect(()=>{\r\n        loadData()\r\n    },[page,pageSize])\r\n    const onChange=(page:number,pageSize:number)=>{\r\n        setPage(page)\r\n        setPageSize(pageSize)\r\n    }\r\n    return <div>\r\n        <Card >\r\n            <Row gutter={16}>\r\n                <Col span={6}>\r\n                    <Statistic title=\"Total Receivable Bills\" value=\"16,876.38\"/>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Statistic title=\"Total Paid Bills\" value=\"6,952.00\"/>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Statistic title=\"Total Refunded Bills\" value=\"2,355.23\"/>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Statistic title=\"Total Unpaid Bills\" value=\"9,962.00\"/>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n        <Card className=\"mt search\">\r\n            <Row gutter={16}>\r\n                <Col span={6}>\r\n                    <p>Bill Date</p>\r\n                    <RangePicker name=\"date\" style={{width:\"100%\"}} onChange={handleChange}/>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <p>Room/Parking Number:</p>\r\n                    <Input placeholder=\"Please enter room or parking number\" value={formData.no} onChange={handleChange1}/>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <p>Payment Status</p>\r\n                    <Select                 \r\n                        style={{width:\"100%\"}}\r\n                        options={[\r\n                            {value:\"1\",label:\"All\"},\r\n                            {value:\"2\",label:\"Paid\"},\r\n                            {value:\"3\",label:\"Unpaid\"}\r\n                        ]}\r\n                        onChange={handleChange2}\r\n                    ></Select>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"primary\" className=\"mr\" onClick={loadData}>Search</Button>\r\n                    <Button>Reset</Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n        <Card className=\"mt\">\r\n            <Button type=\"primary\" icon={<DownloadOutlined />} disabled={disabled} onClick={()=>exportToExcel(selectedRows,header)}>Export to Excel</Button>\r\n            <Button icon={<DeleteOutlined/>} danger className=\"ml\" type=\"primary\"  disabled={disabled}>Batch Void</Button>\r\n        </Card>\r\n        <Card className=\"mt\">\r\n            <Table\r\n                dataSource={dataList}\r\n                columns={columns}\r\n                pagination={false}\r\n                rowKey={(record)=>record.accountNo}\r\n                rowSelection={rowSelection}\r\n\r\n                scroll={{x:1200}}\r\n            />\r\n            <Pagination className=\"fr mt\" showQuickJumper current={page} pageSize={pageSize} total={total} onChange={onChange}/>\r\n        </Card>\r\n    </div>\r\n}\r\n\r\nexport default Bill","import * as XLSX from \"xlsx\";\r\nimport {saveAs} from \"file-saver\";\r\nexport function exportToExcel(data:any,header:string[]){\r\n    const ws=XLSX.utils.json_to_sheet(\r\n        data,{header}\r\n    );\r\n  //创建一个工作簿\r\n  const wb=XLSX.utils.book_new()\r\n  //把我们的工作表加到工作簿中      \r\n  XLSX.utils.book_append_sheet(wb,ws,\"sheet1\");\r\n   //转成二进制数据     \r\n const buf=XLSX.write(wb,{bookType:\"xlsx\",type:\"buffer\"});\r\n //保存和下载\r\n saveAs(new Blob([buf],{type:\"application/octet-stream\"}),\"selected-data.xlsx\") \r\n}"],"names":["getContractList","data","post","getBillList","RangePicker","DatePicker","columns","title","key","render","value","record","index","width","fixed","dataIndex","_jsx","Tag","color","children","_jsxs","_Fragment","Button","type","size","danger","className","formData","setFormData","useState","date","no","status","page","pageSize","dataList","setDataList","setPage","setPageSize","loading","setLoading","total","setTotal","selectedRowKeys","setSelectedRowKeys","selectedRows","setSelectedRows","accountNo","rowSelection","onChange","onSelectChange","console","log","preserveSelectedRowKeys","disabled","useMemo","length","loadData","async","list","startDate","endDate","header","useEffect","Card","Row","gutter","Col","span","Statistic","name","style","handleChange","dateString","prevState","Input","placeholder","e","target","Select","options","label","onClick","icon","DownloadOutlined","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","buf","bookType","saveAs","Blob","exportToExcel","DeleteOutlined","Table","dataSource","pagination","rowKey","scroll","x","Pagination","showQuickJumper","current"],"sourceRoot":""}