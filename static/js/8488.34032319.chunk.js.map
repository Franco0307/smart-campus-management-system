{"version":3,"file":"static/js/8488.34032319.chunk.js","mappings":"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","sources":["hooks/useDataList.ts","utils/withPermissions.tsx","page/settings/index.tsx"],"sourcesContent":["import { useState,useCallback, useEffect } from \"react\";\r\ntype MyFormData={\r\n    [key:string]:any\r\n}\r\n\r\ninterface DataFetcher<T>{\r\n    (args:T&{page:number;pageSize:number}):Promise<any>\r\n}\r\n\r\nfunction useDataList<T extends MyFormData,U>(initialFormData:T,fetchData:DataFetcher<T>){\r\n    const [dataList, setDataList] = useState<U[]>([])\r\n    const [page, setPage] = useState<number>(1);\r\n    const [pageSize, setPageSize] = useState<number>(10);\r\n    const [total, setTotal] = useState<number>(0)\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [formData, setFormData] = useState<T>(initialFormData);\r\n    const loadData=useCallback(async ()=>{\r\n        setLoading(true);\r\n        try{\r\n            const {data:{list,total}}= await fetchData({page,pageSize,...formData});\r\n            setDataList(list);\r\n            setTotal(total)\r\n        }catch(error){\r\n\r\n            console.log(error)\r\n        }finally{\r\n\r\n            setLoading(false)\r\n        }   \r\n    },[formData,page,pageSize,fetchData])\r\n    useEffect(()=>{\r\n        loadData()\r\n    },[loadData]);\r\n\r\n    const handleChange=(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n        const {name,value}=e.target;\r\n        setFormData(prevState=>({\r\n            ...prevState,\r\n            [name]:value\r\n        }))\r\n    }\r\n    const onChange=(page:number,pageSize:number)=>{\r\n        setPage(page);\r\n        setPageSize(pageSize)\r\n    }\r\n    const reset=()=>{\r\n        setPage(1)\r\n        setPageSize(10)\r\n        setFormData(initialFormData)\r\n    }\r\n    return {dataList,page,pageSize,total,loading,formData,setDataList,setPage,setPageSize,setTotal,setLoading,setFormData,loadData,onChange,handleChange,reset}\r\n}\r\n\r\n\r\nexport default useDataList","//你所拥有的权限 当前按钮所需要的权限  \r\nfunction withPermissions(requiredPermissions:string[],userPermissions:string[]):(Componet:React.FC)=>React.FC{\r\n\r\n    return function(Component:React.FC){\r\n        return function(props:any):React.ReactElement|null{                     \r\n            const hasPermission:boolean=requiredPermissions.every(item=>userPermissions.includes(item));\r\n            if(!hasPermission){\r\n                return null\r\n            }\r\n            return <Component {...props}/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withPermissions","import { Card, Row, Col, Table, Input, Button, Pagination, Popconfirm, Tree } from \"antd\"\r\nimport type { TableProps } from 'antd';\r\nimport { getAccountList } from \"../../api/users\";\r\nimport useDataList from \"../../hooks/useDataList\";\r\nimport type { TreeDataNode, TreeProps } from 'antd';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport withPermissions from \"../../utils/withPermissions\";\r\ninterface MenuType{\r\n    label:string;\r\n    icon:string;\r\n    key:string;\r\n    children?:MenuType[]\r\n}\r\ninterface DataType {\r\n    id: number;\r\n    accountName: string;\r\n    auth: string;\r\n    person: string;\r\n    tel: string;\r\n    department: string;\r\n}\r\ninterface SearchType {\r\n    accountName: string\r\n}\r\n\r\nconst treeData: TreeDataNode[] = [\r\n    {\r\n        title: 'Dashboard',\r\n        key: '/dashboard',\r\n    },\r\n    {\r\n        title: 'Tenant Management',\r\n        key: '/users',\r\n        children: [\r\n            { title: 'Tenant List', key: '/users/list' },\r\n            { title: 'Add Tenant', key: '/users/add' },\r\n        ],\r\n    },\r\n    {\r\n        title: 'Property Management',\r\n        key: '/estate',\r\n        children: [\r\n            {\r\n                title: \"Building Management\",\r\n                key: \"/estate/tenement\"\r\n            },\r\n            {\r\n                title: \"Room Management\",\r\n                key: \"/estate/room\"\r\n            },\r\n            {\r\n                title: \"Vehicle Information\",\r\n                key: \"/estate/car\"\r\n            }\r\n\r\n        ]\r\n    },\r\n    {\r\n        title: 'Repair Management',\r\n        key: '/repair',\r\n    },\r\n    {\r\n        title: 'Finance Management',\r\n        key: '/finance',\r\n        children: [\r\n            {\r\n                title: \"Contract Management\",\r\n                key: \"/finance/contract\"\r\n            },\r\n            {\r\n                title: \"Contract Details\",\r\n                key: \"/finance/surrender\"\r\n            },\r\n            {\r\n                title: \"Bill Management\",\r\n                key: \"/finance/bill\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: 'Investment Management',\r\n        key: '/merchants',\r\n    },\r\n    {\r\n        title: 'Operation Management',\r\n        key: '/operation',\r\n        children: [\r\n            {\r\n                title: \"Operation Overview\",\r\n                key: \"/operation/all\"\r\n            },\r\n            {\r\n                title: \"Article Publishing\",\r\n                key: \"/operation/article\"\r\n            },\r\n            {\r\n                title: \"Content Comments\",\r\n                key: \"/operation/comments\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: 'Equipment Management',\r\n        key: '/equipment',\r\n    },\r\n    {\r\n        title: 'Energy Consumption',\r\n        key: '/energy',\r\n    },\r\n    {\r\n        title: 'System Settings',\r\n        key: \"/settings\",\r\n    },\r\n    {\r\n        title: 'Personal Center',\r\n        key: \"/personal\",\r\n    },\r\n];\r\n\r\nfunction extractTreeKeys(data:any){\r\n    let keys:string[]=[];\r\n    data.forEach((item:any)=>{\r\n        if(item.children&&item.children.length>0){\r\n            const childKeys:string[]=extractTreeKeys(item.children);\r\n            keys=keys.concat(childKeys)\r\n        }else{\r\n            keys.push(item.key)\r\n        }\r\n    })\r\n    return keys\r\n}\r\n\r\n\r\n\r\nfunction Settings() {\r\n    const AuthButton:React.FC<any>=withPermissions(['delete'],JSON.parse(sessionStorage.getItem(\"btnAuth\") as string))(Button)\r\n\r\n    const edit=(menu:MenuType[],accountName:string)=>{\r\n            setAccountName(accountName);\r\n           const newCheckedKeys=extractTreeKeys(menu) \r\n            setCheckedKeys(newCheckedKeys)\r\n    }\r\n\r\n    const columns= [\r\n        {\r\n            title: \"No.\",\r\n            key: \"index\",\r\n            render: (text: any, record: any, index: any) => index + 1,\r\n        },\r\n        {\r\n            title: \"Account Name\",\r\n            dataIndex: \"accountName\",\r\n            key: \"accountName\",\r\n        },\r\n        {\r\n            title: \"Permission Role\",\r\n            dataIndex: \"auth\",\r\n            key: \"auth\",\r\n        },\r\n        {\r\n            title: \"User\",\r\n            dataIndex: \"person\",\r\n            key: \"person\",\r\n        },\r\n        {\r\n            title: \"User Phone\",\r\n            dataIndex: \"tel\",\r\n            key: \"tel\",\r\n        },\r\n        {\r\n            title: \"Department\",\r\n            dataIndex: \"department\",\r\n            key: \"department\",\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            key: \"operate\",\r\n            render(value:string, record:any) {\r\n                return <>\r\n                    <Button size=\"small\" type=\"primary\" className=\"mr\" onClick={()=>edit(record.menu,record.accountName)}>Modify Permission</Button>\r\n                    <Popconfirm\r\n                        title=\"Operation Prompt\"\r\n                        description=\"Are you sure you want to delete this account?\"\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <AuthButton size=\"small\" type=\"primary\" danger>Delete Account</AuthButton>\r\n                        {/* <Button size=\"small\" type=\"primary\" danger>Delete Account</Button> */}\r\n                    </Popconfirm>\r\n\r\n                </>\r\n            }\r\n        }\r\n    ]\r\n    const [accountName,setAccountName]=useState<string>(\"Current User\")\r\n    const {menuList}=useSelector((state:any)=>state.authSlice)\r\n    const [checkedKeys,setCheckedKeys]=useState<React.Key[]>([])\r\n    const { dataList, page, pageSize, total, loading, formData, setDataList, setPage, setPageSize, setTotal, setLoading, setFormData, loadData, onChange, handleChange, reset } = useDataList<SearchType, DataType>({ accountName: \"\" }, getAccountList)\r\n   \r\n    useEffect(()=>{\r\n        setCheckedKeys(extractTreeKeys(menuList))\r\n    },[])\r\n   \r\n    const handle=()=>{\r\n        console.log(checkedKeys,accountName)\r\n    }\r\n   const onCheck:TreeProps['onCheck']=(checkedKeys)=>{\r\n    setCheckedKeys(checkedKeys as React.Key[])\r\n   }\r\n   return <div>\r\n        <Card>\r\n            <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Input name=\"accountName\" value={formData.accountName} placeholder=\"Please enter account name\" onChange={handleChange} />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Button type=\"primary\"> Search</Button>\r\n                </Col>\r\n                <Col span={8} className=\"tr\">\r\n                    <Button type=\"primary\">Create Account</Button>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Card>\r\n\r\n        <Row gutter={16} className=\"mt\">\r\n            <Col span={8} >\r\n                <Card title={accountName+\": Permissions\"}>\r\n                    <Tree\r\n                        checkable\r\n                        treeData={treeData}\r\n                        checkedKeys={checkedKeys}\r\n                        onCheck={onCheck}\r\n                    />\r\n                </Card>\r\n                <Card className=\"mt\">\r\n                    <Popconfirm\r\n                        title=\"Operation Prompt\"\r\n                        description={`Are you sure you want to modify permissions for ${accountName}?`}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        onConfirm={handle}\r\n                    >\r\n                        <Button type=\"primary\">Submit Changes</Button>\r\n                    </Popconfirm> \r\n                </Card>\r\n            </Col>\r\n\r\n            <Col span={16}>\r\n                <Card>\r\n                    <Table\r\n                        loading={loading}\r\n                        columns={columns}\r\n                        dataSource={dataList}\r\n                        rowKey={record => record.id}\r\n                        pagination={false}\r\n                    />\r\n                    <Pagination className=\"fr mr\" showQuickJumper total={total} current={page} pageSize={pageSize} onChange={onChange} />\r\n                </Card>\r\n\r\n            </Col>\r\n        </Row>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Settings"],"names":["initialFormData","fetchData","dataList","setDataList","useState","page","setPage","pageSize","setPageSize","total","setTotal","loading","setLoading","formData","setFormData","loadData","useCallback","async","data","list","error","console","log","useEffect","onChange","handleChange","e","name","value","target","prevState","reset","requiredPermissions","userPermissions","Component","props","every","item","includes","_jsx","treeData","title","key","children","extractTreeKeys","keys","forEach","length","childKeys","concat","push","AuthButton","withPermissions","JSON","parse","sessionStorage","getItem","Button","columns","render","text","record","index","dataIndex","_jsxs","_Fragment","size","type","className","onClick","edit","menu","accountName","setAccountName","newCheckedKeys","setCheckedKeys","Popconfirm","description","okText","cancelText","danger","menuList","useSelector","state","authSlice","checkedKeys","useDataList","getAccountList","Card","Row","gutter","Col","span","Input","placeholder","Tree","checkable","onCheck","onConfirm","handle","Table","dataSource","rowKey","id","pagination","Pagination","showQuickJumper","current"],"sourceRoot":""}